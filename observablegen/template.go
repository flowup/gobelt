// DO NOT TOUCH THIS FILE
// This file is auto generated by gobelt utility
// it should be ignored by the version control and
// generated only if necessary
package observablegen

// TTypeSubscriberFunc is a callback function
// for the subscriber to the TType collection
type TTypeSubscriberFunc func(val []*TType)

// TTypeObservable is an observable for the TTypeSubject
type TTypeObservable struct {
  subscribers []*TTypeSubscriber
}

// Subscribe will add the subscriber into the observable
func (o *TTypeObservable) Subscribe(callback TTypeSubscriberFunc) {
  o.subscribers = append(o.subscribers, &TTypeSubscriber{callback})
}

// TTypeSubscriber is an object that subscribes to the
// changes of TTypeSubject.
type TTypeSubscriber struct {
  callback TTypeSubscriberFunc
}

// Next pushes the value to the subscriber
func (s *TTypeSubscriber) Next(val []*TType) {
  s.callback(val)
}

// TTypeSubject is an entry point for changes of TType
type TTypeSubject struct {
  observable *TTypeObservable
}

// NewTTypeSubject returns a new Subject object for the
// TType.
func NewTTypeSubject() *TTypeSubject {
  return &TTypeSubject{&TTypeObservable{nil}}
}

// AsObservable returns the observable object of the TTypeSubject
func (s *TTypeSubject) AsObservable() *TTypeObservable {
  return s.observable
}

// Next will push the given value to all subscribers of the
// underlying observable
func (s *TTypeSubject) Next(val []*TType) {
  for _, sub := range s.observable.subscribers {
    sub.Next(val)
  }
}


